.TH "/home/vladn/git/ovs/datapath/linux/compat/include/linux/openvswitch.h" 3 "Mon Aug 17 2015" "ovs datapath" \" -*- nroff -*-
.ad l
.nh
.SH NAME
/home/vladn/git/ovs/datapath/linux/compat/include/linux/openvswitch.h \- 
.SH SYNOPSIS
.br
.PP
\fC#include <linux/types\&.h>\fP
.br
\fC#include <linux/if_ether\&.h>\fP
.br

.SS "Data Structures"

.in +1c
.ti -1c
.RI "struct \fBovs_header\fP"
.br
.ti -1c
.RI "struct \fBovs_dp_stats\fP"
.br
.ti -1c
.RI "struct \fBovs_dp_megaflow_stats\fP"
.br
.ti -1c
.RI "struct \fBovs_vport_stats\fP"
.br
.ti -1c
.RI "struct \fBovs_flow_stats\fP"
.br
.ti -1c
.RI "struct \fBovs_key_ethernet\fP"
.br
.ti -1c
.RI "struct \fBovs_key_mpls\fP"
.br
.ti -1c
.RI "struct \fBovs_key_ipv4\fP"
.br
.ti -1c
.RI "struct \fBovs_key_ipv6\fP"
.br
.ti -1c
.RI "struct \fBovs_key_tcp\fP"
.br
.ti -1c
.RI "struct \fBovs_key_udp\fP"
.br
.ti -1c
.RI "struct \fBovs_key_sctp\fP"
.br
.ti -1c
.RI "struct \fBovs_key_icmp\fP"
.br
.ti -1c
.RI "struct \fBovs_key_icmpv6\fP"
.br
.ti -1c
.RI "struct \fBovs_key_arp\fP"
.br
.ti -1c
.RI "struct \fBovs_key_nd\fP"
.br
.ti -1c
.RI "struct \fBovs_action_push_mpls\fP"
.br
.ti -1c
.RI "struct \fBovs_action_push_vlan\fP"
.br
.ti -1c
.RI "struct \fBovs_action_hash\fP"
.br
.ti -1c
.RI "struct \fBovs_action_push_tnl\fP"
.br
.in -1c
.SS "Macros"

.in +1c
.ti -1c
.RI "#define \fBOVS_DATAPATH_FAMILY\fP   'ovs_datapath'"
.br
.ti -1c
.RI "#define \fBOVS_DATAPATH_MCGROUP\fP   'ovs_datapath'"
.br
.ti -1c
.RI "#define \fBOVS_DATAPATH_VERSION\fP   2"
.br
.ti -1c
.RI "#define \fBOVS_DP_VER_FEATURES\fP   2"
.br
.ti -1c
.RI "#define \fBOVS_DP_ATTR_MAX\fP   (\fB__OVS_DP_ATTR_MAX\fP - 1)"
.br
.ti -1c
.RI "#define \fBOVS_DP_F_UNALIGNED\fP   (1 << 0)"
.br
.ti -1c
.RI "#define \fBOVS_DP_F_VPORT_PIDS\fP   (1 << 1)"
.br
.ti -1c
.RI "#define \fBOVSP_LOCAL\fP   ((__u32)0)"
.br
.ti -1c
.RI "#define \fBOVS_PACKET_FAMILY\fP   'ovs_packet'"
.br
.ti -1c
.RI "#define \fBOVS_PACKET_VERSION\fP   0x1"
.br
.ti -1c
.RI "#define \fBOVS_PACKET_ATTR_MAX\fP   (\fB__OVS_PACKET_ATTR_MAX\fP - 1)"
.br
.ti -1c
.RI "#define \fBOVS_VPORT_FAMILY\fP   'ovs_vport'"
.br
.ti -1c
.RI "#define \fBOVS_VPORT_MCGROUP\fP   'ovs_vport'"
.br
.ti -1c
.RI "#define \fBOVS_VPORT_VERSION\fP   0x1"
.br
.ti -1c
.RI "#define \fBOVS_VPORT_TYPE_MAX\fP   (\fB__OVS_VPORT_TYPE_MAX\fP - 1)"
.br
.ti -1c
.RI "#define \fBOVS_VPORT_ATTR_MAX\fP   (\fB__OVS_VPORT_ATTR_MAX\fP - 1)"
.br
.ti -1c
.RI "#define \fBOVS_VXLAN_EXT_MAX\fP   (\fB__OVS_VXLAN_EXT_MAX\fP - 1)"
.br
.ti -1c
.RI "#define \fBOVS_TUNNEL_ATTR_MAX\fP   (\fB__OVS_TUNNEL_ATTR_MAX\fP - 1)"
.br
.ti -1c
.RI "#define \fBOVS_FLOW_FAMILY\fP   'ovs_flow'"
.br
.ti -1c
.RI "#define \fBOVS_FLOW_MCGROUP\fP   'ovs_flow'"
.br
.ti -1c
.RI "#define \fBOVS_FLOW_VERSION\fP   0x1"
.br
.ti -1c
.RI "#define \fBOVS_KEY_ATTR_MAX\fP   (\fB__OVS_KEY_ATTR_MAX\fP - 1)"
.br
.ti -1c
.RI "#define \fBOVS_TUNNEL_KEY_ATTR_MAX\fP   (\fB__OVS_TUNNEL_KEY_ATTR_MAX\fP - 1)"
.br
.ti -1c
.RI "#define \fBOVS_FRAG_TYPE_MAX\fP   (\fB__OVS_FRAG_TYPE_MAX\fP - 1)"
.br
.ti -1c
.RI "#define \fBOVS_FLOW_ATTR_MAX\fP   (\fB__OVS_FLOW_ATTR_MAX\fP - 1)"
.br
.ti -1c
.RI "#define \fBOVS_UFID_F_OMIT_KEY\fP   (1 << 0)"
.br
.ti -1c
.RI "#define \fBOVS_UFID_F_OMIT_MASK\fP   (1 << 1)"
.br
.ti -1c
.RI "#define \fBOVS_UFID_F_OMIT_ACTIONS\fP   (1 << 2)"
.br
.ti -1c
.RI "#define \fBOVS_SAMPLE_ATTR_MAX\fP   (\fB__OVS_SAMPLE_ATTR_MAX\fP - 1)"
.br
.ti -1c
.RI "#define \fBOVS_USERSPACE_ATTR_MAX\fP   (\fB__OVS_USERSPACE_ATTR_MAX\fP - 1)"
.br
.ti -1c
.RI "#define \fBTNL_PUSH_HEADER_SIZE\fP   512"
.br
.ti -1c
.RI "#define \fBOVS_ACTION_ATTR_MAX\fP   (\fB__OVS_ACTION_ATTR_MAX\fP - 1)"
.br
.in -1c
.SS "Enumerations"

.in +1c
.ti -1c
.RI "enum \fBovs_datapath_cmd\fP { \fBOVS_DP_CMD_UNSPEC\fP, \fBOVS_DP_CMD_NEW\fP, \fBOVS_DP_CMD_DEL\fP, \fBOVS_DP_CMD_GET\fP, \fBOVS_DP_CMD_SET\fP }"
.br
.ti -1c
.RI "enum \fBovs_datapath_attr\fP { \fBOVS_DP_ATTR_UNSPEC\fP, \fBOVS_DP_ATTR_NAME\fP, \fBOVS_DP_ATTR_UPCALL_PID\fP, \fBOVS_DP_ATTR_STATS\fP, \fBOVS_DP_ATTR_MEGAFLOW_STATS\fP, \fBOVS_DP_ATTR_USER_FEATURES\fP, \fB__OVS_DP_ATTR_MAX\fP }"
.br
.ti -1c
.RI "enum \fBovs_packet_cmd\fP { \fBOVS_PACKET_CMD_UNSPEC\fP, \fBOVS_PACKET_CMD_MISS\fP, \fBOVS_PACKET_CMD_ACTION\fP, \fBOVS_PACKET_CMD_EXECUTE\fP }"
.br
.ti -1c
.RI "enum \fBovs_packet_attr\fP { \fBOVS_PACKET_ATTR_UNSPEC\fP, \fBOVS_PACKET_ATTR_PACKET\fP, \fBOVS_PACKET_ATTR_KEY\fP, \fBOVS_PACKET_ATTR_ACTIONS\fP, \fBOVS_PACKET_ATTR_USERDATA\fP, \fBOVS_PACKET_ATTR_EGRESS_TUN_KEY\fP, \fBOVS_PACKET_ATTR_UNUSED1\fP, \fBOVS_PACKET_ATTR_UNUSED2\fP, \fBOVS_PACKET_ATTR_PROBE\fP, \fB__OVS_PACKET_ATTR_MAX\fP }"
.br
.ti -1c
.RI "enum \fBovs_vport_cmd\fP { \fBOVS_VPORT_CMD_UNSPEC\fP, \fBOVS_VPORT_CMD_NEW\fP, \fBOVS_VPORT_CMD_DEL\fP, \fBOVS_VPORT_CMD_GET\fP, \fBOVS_VPORT_CMD_SET\fP }"
.br
.ti -1c
.RI "enum \fBovs_vport_type\fP { \fBOVS_VPORT_TYPE_UNSPEC\fP, \fBOVS_VPORT_TYPE_NETDEV\fP, \fBOVS_VPORT_TYPE_INTERNAL\fP, \fBOVS_VPORT_TYPE_GRE\fP, \fBOVS_VPORT_TYPE_VXLAN\fP, \fBOVS_VPORT_TYPE_GENEVE\fP, \fBOVS_VPORT_TYPE_GRE64\fP = 104, \fBOVS_VPORT_TYPE_LISP\fP = 105, \fBOVS_VPORT_TYPE_STT\fP = 106, \fB__OVS_VPORT_TYPE_MAX\fP }"
.br
.ti -1c
.RI "enum \fBovs_vport_attr\fP { \fBOVS_VPORT_ATTR_UNSPEC\fP, \fBOVS_VPORT_ATTR_PORT_NO\fP, \fBOVS_VPORT_ATTR_TYPE\fP, \fBOVS_VPORT_ATTR_NAME\fP, \fBOVS_VPORT_ATTR_OPTIONS\fP, \fBOVS_VPORT_ATTR_UPCALL_PID\fP, \fBOVS_VPORT_ATTR_STATS\fP, \fB__OVS_VPORT_ATTR_MAX\fP }"
.br
.ti -1c
.RI "enum { \fBOVS_VXLAN_EXT_UNSPEC\fP, \fBOVS_VXLAN_EXT_GBP\fP, \fB__OVS_VXLAN_EXT_MAX\fP }"
.br
.ti -1c
.RI "enum { \fBOVS_TUNNEL_ATTR_UNSPEC\fP, \fBOVS_TUNNEL_ATTR_DST_PORT\fP, \fBOVS_TUNNEL_ATTR_EXTENSION\fP, \fB__OVS_TUNNEL_ATTR_MAX\fP }"
.br
.ti -1c
.RI "enum \fBovs_flow_cmd\fP { \fBOVS_FLOW_CMD_UNSPEC\fP, \fBOVS_FLOW_CMD_NEW\fP, \fBOVS_FLOW_CMD_DEL\fP, \fBOVS_FLOW_CMD_GET\fP, \fBOVS_FLOW_CMD_SET\fP }"
.br
.ti -1c
.RI "enum \fBovs_key_attr\fP { \fBOVS_KEY_ATTR_UNSPEC\fP, \fBOVS_KEY_ATTR_ENCAP\fP, \fBOVS_KEY_ATTR_PRIORITY\fP, \fBOVS_KEY_ATTR_IN_PORT\fP, \fBOVS_KEY_ATTR_ETHERNET\fP, \fBOVS_KEY_ATTR_VLAN\fP, \fBOVS_KEY_ATTR_ETHERTYPE\fP, \fBOVS_KEY_ATTR_IPV4\fP, \fBOVS_KEY_ATTR_IPV6\fP, \fBOVS_KEY_ATTR_TCP\fP, \fBOVS_KEY_ATTR_UDP\fP, \fBOVS_KEY_ATTR_ICMP\fP, \fBOVS_KEY_ATTR_ICMPV6\fP, \fBOVS_KEY_ATTR_ARP\fP, \fBOVS_KEY_ATTR_ND\fP, \fBOVS_KEY_ATTR_SKB_MARK\fP, \fBOVS_KEY_ATTR_TUNNEL\fP, \fBOVS_KEY_ATTR_SCTP\fP, \fBOVS_KEY_ATTR_TCP_FLAGS\fP, \fBOVS_KEY_ATTR_DP_HASH\fP, \fBOVS_KEY_ATTR_RECIRC_ID\fP, \fBOVS_KEY_ATTR_MPLS\fP, \fB__OVS_KEY_ATTR_MAX\fP }"
.br
.ti -1c
.RI "enum \fBovs_tunnel_key_attr\fP { \fBOVS_TUNNEL_KEY_ATTR_ID\fP, \fBOVS_TUNNEL_KEY_ATTR_IPV4_SRC\fP, \fBOVS_TUNNEL_KEY_ATTR_IPV4_DST\fP, \fBOVS_TUNNEL_KEY_ATTR_TOS\fP, \fBOVS_TUNNEL_KEY_ATTR_TTL\fP, \fBOVS_TUNNEL_KEY_ATTR_DONT_FRAGMENT\fP, \fBOVS_TUNNEL_KEY_ATTR_CSUM\fP, \fBOVS_TUNNEL_KEY_ATTR_OAM\fP, \fBOVS_TUNNEL_KEY_ATTR_GENEVE_OPTS\fP, \fBOVS_TUNNEL_KEY_ATTR_TP_SRC\fP, \fBOVS_TUNNEL_KEY_ATTR_TP_DST\fP, \fBOVS_TUNNEL_KEY_ATTR_VXLAN_OPTS\fP, \fB__OVS_TUNNEL_KEY_ATTR_MAX\fP }"
.br
.ti -1c
.RI "enum \fBovs_frag_type\fP { \fBOVS_FRAG_TYPE_NONE\fP, \fBOVS_FRAG_TYPE_FIRST\fP, \fBOVS_FRAG_TYPE_LATER\fP, \fB__OVS_FRAG_TYPE_MAX\fP }"
.br
.ti -1c
.RI "enum \fBovs_flow_attr\fP { \fBOVS_FLOW_ATTR_UNSPEC\fP, \fBOVS_FLOW_ATTR_KEY\fP, \fBOVS_FLOW_ATTR_ACTIONS\fP, \fBOVS_FLOW_ATTR_STATS\fP, \fBOVS_FLOW_ATTR_TCP_FLAGS\fP, \fBOVS_FLOW_ATTR_USED\fP, \fBOVS_FLOW_ATTR_CLEAR\fP, \fBOVS_FLOW_ATTR_MASK\fP, \fBOVS_FLOW_ATTR_PROBE\fP, \fBOVS_FLOW_ATTR_UFID\fP, \fBOVS_FLOW_ATTR_UFID_FLAGS\fP, \fB__OVS_FLOW_ATTR_MAX\fP }"
.br
.ti -1c
.RI "enum \fBovs_sample_attr\fP { \fBOVS_SAMPLE_ATTR_UNSPEC\fP, \fBOVS_SAMPLE_ATTR_PROBABILITY\fP, \fBOVS_SAMPLE_ATTR_ACTIONS\fP, \fB__OVS_SAMPLE_ATTR_MAX\fP }"
.br
.ti -1c
.RI "enum \fBovs_userspace_attr\fP { \fBOVS_USERSPACE_ATTR_UNSPEC\fP, \fBOVS_USERSPACE_ATTR_PID\fP, \fBOVS_USERSPACE_ATTR_USERDATA\fP, \fBOVS_USERSPACE_ATTR_EGRESS_TUN_PORT\fP, \fBOVS_USERSPACE_ATTR_ACTIONS\fP, \fB__OVS_USERSPACE_ATTR_MAX\fP }"
.br
.ti -1c
.RI "enum \fBovs_hash_alg\fP { \fBOVS_HASH_ALG_L4\fP }"
.br
.ti -1c
.RI "enum \fBovs_action_attr\fP { \fBOVS_ACTION_ATTR_UNSPEC\fP, \fBOVS_ACTION_ATTR_OUTPUT\fP, \fBOVS_ACTION_ATTR_USERSPACE\fP, \fBOVS_ACTION_ATTR_SET\fP, \fBOVS_ACTION_ATTR_PUSH_VLAN\fP, \fBOVS_ACTION_ATTR_POP_VLAN\fP, \fBOVS_ACTION_ATTR_SAMPLE\fP, \fBOVS_ACTION_ATTR_RECIRC\fP, \fBOVS_ACTION_ATTR_HASH\fP, \fBOVS_ACTION_ATTR_PUSH_MPLS\fP, \fBOVS_ACTION_ATTR_POP_MPLS\fP, \fBOVS_ACTION_ATTR_SET_MASKED\fP, \fBOVS_ACTION_ATTR_TUNNEL_PUSH\fP, \fBOVS_ACTION_ATTR_TUNNEL_POP\fP, \fB__OVS_ACTION_ATTR_MAX\fP }"
.br
.in -1c
.SH "Macro Definition Documentation"
.PP 
.SS "#define OVS_ACTION_ATTR_MAX   (\fB__OVS_ACTION_ATTR_MAX\fP - 1)"

.SS "#define OVS_DATAPATH_FAMILY   'ovs_datapath'"

.SS "#define OVS_DATAPATH_MCGROUP   'ovs_datapath'"

.SS "#define OVS_DATAPATH_VERSION   2"

.SS "#define OVS_DP_ATTR_MAX   (\fB__OVS_DP_ATTR_MAX\fP - 1)"

.SS "#define OVS_DP_F_UNALIGNED   (1 << 0)"

.SS "#define OVS_DP_F_VPORT_PIDS   (1 << 1)"

.SS "#define OVS_DP_VER_FEATURES   2"

.SS "#define OVS_FLOW_ATTR_MAX   (\fB__OVS_FLOW_ATTR_MAX\fP - 1)"

.SS "#define OVS_FLOW_FAMILY   'ovs_flow'"

.SS "#define OVS_FLOW_MCGROUP   'ovs_flow'"

.SS "#define OVS_FLOW_VERSION   0x1"

.SS "#define OVS_FRAG_TYPE_MAX   (\fB__OVS_FRAG_TYPE_MAX\fP - 1)"

.SS "#define OVS_KEY_ATTR_MAX   (\fB__OVS_KEY_ATTR_MAX\fP - 1)"

.SS "#define OVS_PACKET_ATTR_MAX   (\fB__OVS_PACKET_ATTR_MAX\fP - 1)"

.SS "#define OVS_PACKET_FAMILY   'ovs_packet'"

.SS "#define OVS_PACKET_VERSION   0x1"

.SS "#define OVS_SAMPLE_ATTR_MAX   (\fB__OVS_SAMPLE_ATTR_MAX\fP - 1)"

.SS "#define OVS_TUNNEL_ATTR_MAX   (\fB__OVS_TUNNEL_ATTR_MAX\fP - 1)"

.SS "#define OVS_TUNNEL_KEY_ATTR_MAX   (\fB__OVS_TUNNEL_KEY_ATTR_MAX\fP - 1)"

.SS "#define OVS_UFID_F_OMIT_ACTIONS   (1 << 2)"

.SS "#define OVS_UFID_F_OMIT_KEY   (1 << 0)"
Omit attributes for notifications\&.
.PP
If a datapath request contains an OVS_UFID_F_OMIT_* flag, then the datapath may omit the corresponding 'ovs_flow_attr' from the response\&. 
.SS "#define OVS_UFID_F_OMIT_MASK   (1 << 1)"

.SS "#define OVS_USERSPACE_ATTR_MAX   (\fB__OVS_USERSPACE_ATTR_MAX\fP - 1)"

.SS "#define OVS_VPORT_ATTR_MAX   (\fB__OVS_VPORT_ATTR_MAX\fP - 1)"

.SS "#define OVS_VPORT_FAMILY   'ovs_vport'"

.SS "#define OVS_VPORT_MCGROUP   'ovs_vport'"

.SS "#define OVS_VPORT_TYPE_MAX   (\fB__OVS_VPORT_TYPE_MAX\fP - 1)"

.SS "#define OVS_VPORT_VERSION   0x1"

.SS "#define OVS_VXLAN_EXT_MAX   (\fB__OVS_VXLAN_EXT_MAX\fP - 1)"

.SS "#define OVSP_LOCAL   ((__u32)0)"

.SS "#define TNL_PUSH_HEADER_SIZE   512"

.SH "Enumeration Type Documentation"
.PP 
.SS "anonymous enum"

.PP
\fBEnumerator\fP
.in +1c
.TP
\fB\fIOVS_VXLAN_EXT_UNSPEC \fP\fP
.TP
\fB\fIOVS_VXLAN_EXT_GBP \fP\fP
.TP
\fB\fI__OVS_VXLAN_EXT_MAX \fP\fP
.PP
.nf
283      {
284     OVS_VXLAN_EXT_UNSPEC,
285     OVS_VXLAN_EXT_GBP,      /* Flag or __u32 */
286     __OVS_VXLAN_EXT_MAX,
287 };
.fi
.SS "anonymous enum"

.PP
\fBEnumerator\fP
.in +1c
.TP
\fB\fIOVS_TUNNEL_ATTR_UNSPEC \fP\fP
.TP
\fB\fIOVS_TUNNEL_ATTR_DST_PORT \fP\fP
.TP
\fB\fIOVS_TUNNEL_ATTR_EXTENSION \fP\fP
.TP
\fB\fI__OVS_TUNNEL_ATTR_MAX \fP\fP
.PP
.nf
293      {
294     OVS_TUNNEL_ATTR_UNSPEC,
295     OVS_TUNNEL_ATTR_DST_PORT, /* 16-bit UDP port, used by L4 tunnels\&. */
296     OVS_TUNNEL_ATTR_EXTENSION,
297     __OVS_TUNNEL_ATTR_MAX
298 };
.fi
.SS "enum \fBovs_action_attr\fP"
enum ovs_action_attr - Action types\&.
.PP
: Output packet to port\&. : Send packet to userspace according to nested OVS_USERSPACE_ATTR_* attributes\&. : Push a new outermost 802\&.1Q header onto the packet\&. : Pop the outermost 802\&.1Q header off the packet\&. : Probabilitically executes actions, as specified in the nested OVS_SAMPLE_ATTR_* attributes\&. : Replaces the contents of an existing header\&. The single nested OVS_KEY_ATTR_* attribute specifies a header to modify and its value\&. : Replaces the contents of an existing header\&. A nested OVS_KEY_ATTR_* attribute specifies a header to modify, its value, and a mask\&. For every bit set in the mask, the corresponding bit value is copied from the value to the packet header field, rest of the bits are left unchanged\&. The non-masked value bits must be passed in as zeroes\&. Masking is not supported for the OVS_KEY_ATTR_TUNNEL attribute\&. : Recirculate within the data path\&. : Compute and set flow hash value\&. : Push a new MPLS label stack entry onto the top of the packets MPLS label stack\&. Set the ethertype of the encapsulating frame to either ETH_P_MPLS_UC or ETH_P_MPLS_MC to indicate the new packet contents\&. : Pop an MPLS label stack entry off of the packet's MPLS label stack\&. Set the encapsulating frame's ethertype to indicate the new packet contents\&. This could potentially still be ETH_P_MPLS if the resulting MPLS label stack is not empty\&. If there is no MPLS label stack, as determined by ethertype, no action is taken\&.
.PP
Only a single header can be set with a single OVS_ACTION_ATTR_SET\&. Not all fields within a header are modifiable, e\&.g\&. the IPv4 protocol and fragment type may not be changed\&.
.PP
: Kernel internal masked set action translated from the \&. : Push tunnel header described by struct \fBovs_action_push_tnl\fP\&. : Lookup tunnel port by port-no passed and pop tunnel header\&. 
.PP
\fBEnumerator\fP
.in +1c
.TP
\fB\fIOVS_ACTION_ATTR_UNSPEC \fP\fP
.TP
\fB\fIOVS_ACTION_ATTR_OUTPUT \fP\fP
.TP
\fB\fIOVS_ACTION_ATTR_USERSPACE \fP\fP
.TP
\fB\fIOVS_ACTION_ATTR_SET \fP\fP
.TP
\fB\fIOVS_ACTION_ATTR_PUSH_VLAN \fP\fP
.TP
\fB\fIOVS_ACTION_ATTR_POP_VLAN \fP\fP
.TP
\fB\fIOVS_ACTION_ATTR_SAMPLE \fP\fP
.TP
\fB\fIOVS_ACTION_ATTR_RECIRC \fP\fP
.TP
\fB\fIOVS_ACTION_ATTR_HASH \fP\fP
.TP
\fB\fIOVS_ACTION_ATTR_PUSH_MPLS \fP\fP
.TP
\fB\fIOVS_ACTION_ATTR_POP_MPLS \fP\fP
.TP
\fB\fIOVS_ACTION_ATTR_SET_MASKED \fP\fP
.TP
\fB\fIOVS_ACTION_ATTR_TUNNEL_PUSH \fP\fP
.TP
\fB\fIOVS_ACTION_ATTR_TUNNEL_POP \fP\fP
.TP
\fB\fI__OVS_ACTION_ATTR_MAX \fP\fP
.PP
.nf
690                      {
691     OVS_ACTION_ATTR_UNSPEC,
692     OVS_ACTION_ATTR_OUTPUT,       /* u32 port number\&. */
693     OVS_ACTION_ATTR_USERSPACE,    /* Nested OVS_USERSPACE_ATTR_*\&. */
694     OVS_ACTION_ATTR_SET,          /* One nested OVS_KEY_ATTR_*\&. */
695     OVS_ACTION_ATTR_PUSH_VLAN,    /* struct ovs_action_push_vlan\&. */
696     OVS_ACTION_ATTR_POP_VLAN,     /* No argument\&. */
697     OVS_ACTION_ATTR_SAMPLE,       /* Nested OVS_SAMPLE_ATTR_*\&. */
698     OVS_ACTION_ATTR_RECIRC,       /* u32 recirc_id\&. */
699     OVS_ACTION_ATTR_HASH,         /* struct ovs_action_hash\&. */
700     OVS_ACTION_ATTR_PUSH_MPLS,    /* struct ovs_action_push_mpls\&. */
701     OVS_ACTION_ATTR_POP_MPLS,     /* __be16 ethertype\&. */
702     OVS_ACTION_ATTR_SET_MASKED,   /* One nested OVS_KEY_ATTR_* including
703                        * data immediately followed by a mask\&.
704                        * The data must be zero for the unmasked
705                        * bits\&. */
706 
707 #ifndef __KERNEL__
708     OVS_ACTION_ATTR_TUNNEL_PUSH,   /* struct ovs_action_push_tnl*/
709     OVS_ACTION_ATTR_TUNNEL_POP,    /* u32 port number\&. */
710 #endif
711     __OVS_ACTION_ATTR_MAX,        /* Nothing past this will be accepted
712                        * from userspace\&. */
713 
714 #ifdef __KERNEL__
715     OVS_ACTION_ATTR_SET_TO_MASKED, /* Kernel module internal masked
716                     * set action converted from
717                     * OVS_ACTION_ATTR_SET\&. */
718 #endif
719 };
.fi
.SS "enum \fBovs_datapath_attr\fP"
enum ovs_datapath_attr - attributes for OVS_DP_* commands\&. : Name of the network device that serves as the 'local
port'\&. This is the name of the network device whose dp_ifindex is given in the &struct \fBovs_header\fP\&. Always present in notifications\&. Required in OVS_DP_NEW requests\&. May be used as an alternative to specifying dp_ifindex in other requests (with a dp_ifindex of 0)\&. : The Netlink socket in userspace that is initially set on the datapath port (for OVS_ACTION_ATTR_MISS)\&. Only valid on OVS_DP_CMD_NEW requests\&. A value of zero indicates that upcalls should not be sent\&. : Statistics about packets that have passed through the datapath\&. Always present in notifications\&. : Statistics about mega flow masks usage for the datapath\&. Always present in notifications\&.
.PP
These attributes follow the &struct \fBovs_header\fP within the Generic Netlink payload for OVS_DP_* commands\&. 
.PP
\fBEnumerator\fP
.in +1c
.TP
\fB\fIOVS_DP_ATTR_UNSPEC \fP\fP
.TP
\fB\fIOVS_DP_ATTR_NAME \fP\fP
.TP
\fB\fIOVS_DP_ATTR_UPCALL_PID \fP\fP
.TP
\fB\fIOVS_DP_ATTR_STATS \fP\fP
.TP
\fB\fIOVS_DP_ATTR_MEGAFLOW_STATS \fP\fP
.TP
\fB\fIOVS_DP_ATTR_USER_FEATURES \fP\fP
.TP
\fB\fI__OVS_DP_ATTR_MAX \fP\fP
.PP
.nf
100                        {
101     OVS_DP_ATTR_UNSPEC,
102     OVS_DP_ATTR_NAME,       /* name of dp_ifindex netdev */
103     OVS_DP_ATTR_UPCALL_PID,     /* Netlink PID to receive upcalls */
104     OVS_DP_ATTR_STATS,      /* struct ovs_dp_stats */
105     OVS_DP_ATTR_MEGAFLOW_STATS, /* struct ovs_dp_megaflow_stats */
106     OVS_DP_ATTR_USER_FEATURES,  /* OVS_DP_F_*  */
107     __OVS_DP_ATTR_MAX
108 };
.fi
.SS "enum \fBovs_datapath_cmd\fP"

.PP
\fBEnumerator\fP
.in +1c
.TP
\fB\fIOVS_DP_CMD_UNSPEC \fP\fP
.TP
\fB\fIOVS_DP_CMD_NEW \fP\fP
.TP
\fB\fIOVS_DP_CMD_DEL \fP\fP
.TP
\fB\fIOVS_DP_CMD_GET \fP\fP
.TP
\fB\fIOVS_DP_CMD_SET \fP\fP
.PP
.nf
73                       {
74     OVS_DP_CMD_UNSPEC,
75     OVS_DP_CMD_NEW,
76     OVS_DP_CMD_DEL,
77     OVS_DP_CMD_GET,
78     OVS_DP_CMD_SET
79 };
.fi
.SS "enum \fBovs_flow_attr\fP"
enum ovs_flow_attr - attributes for OVS_FLOW_* commands\&. : Nested OVS_KEY_ATTR_* attributes specifying the flow key\&. Always present in notifications\&. Required for all requests (except dumps)\&. : Nested OVS_ACTION_ATTR_* attributes specifying the actions to take for packets that match the key\&. Always present in notifications\&. Required for OVS_FLOW_CMD_NEW requests, optional for OVS_FLOW_CMD_SET requests\&. An OVS_FLOW_CMD_SET without OVS_FLOW_ATTR_ACTIONS will not modify the actions\&. To clear the actions, an OVS_FLOW_ATTR_ACTIONS without any nested attributes must be given\&. : &struct \fBovs_flow_stats\fP giving statistics for this flow\&. Present in notifications if the stats would be nonzero\&. Ignored in requests\&. : An 8-bit value giving the OR'd value of all of the TCP flags seen on packets in this flow\&. Only present in notifications for TCP flows, and only if it would be nonzero\&. Ignored in requests\&. : A 64-bit integer giving the time, in milliseconds on the system monotonic clock, at which a packet was last processed for this flow\&. Only present in notifications if a packet has been processed for this flow\&. Ignored in requests\&. : If present in a OVS_FLOW_CMD_SET request, clears the last-used time, accumulated TCP flags, and statistics for this flow\&. Otherwise ignored in requests\&. Never present in notifications\&. : Nested OVS_KEY_ATTR_* attributes specifying the mask bits for wildcarded flow match\&. Mask bit value '1' specifies exact match with corresponding flow key bit, while mask bit value '0' specifies a wildcarded match\&. Omitting attribute is treated as wildcarding all corresponding fields\&. Optional for all requests\&. If not present, all flow key bits are exact match bits\&. : A value between 1-16 octets specifying a unique identifier for the flow\&. Causes the flow to be indexed by this value rather than the value of the OVS_FLOW_ATTR_KEY attribute\&. Optional for all requests\&. Present in notifications if the flow was created with this attribute\&. : A 32-bit value of OR'd OVS_UFID_F_* flags that provide alternative semantics for flow installation and retrieval\&. Optional for all requests\&.
.PP
These attributes follow the &struct \fBovs_header\fP within the Generic Netlink payload for OVS_FLOW_* commands\&. 
.PP
\fBEnumerator\fP
.in +1c
.TP
\fB\fIOVS_FLOW_ATTR_UNSPEC \fP\fP
.TP
\fB\fIOVS_FLOW_ATTR_KEY \fP\fP
.TP
\fB\fIOVS_FLOW_ATTR_ACTIONS \fP\fP
.TP
\fB\fIOVS_FLOW_ATTR_STATS \fP\fP
.TP
\fB\fIOVS_FLOW_ATTR_TCP_FLAGS \fP\fP
.TP
\fB\fIOVS_FLOW_ATTR_USED \fP\fP
.TP
\fB\fIOVS_FLOW_ATTR_CLEAR \fP\fP
.TP
\fB\fIOVS_FLOW_ATTR_MASK \fP\fP
.TP
\fB\fIOVS_FLOW_ATTR_PROBE \fP\fP
.TP
\fB\fIOVS_FLOW_ATTR_UFID \fP\fP
.TP
\fB\fIOVS_FLOW_ATTR_UFID_FLAGS \fP\fP
.TP
\fB\fI__OVS_FLOW_ATTR_MAX \fP\fP
.PP
.nf
502                    {
503     OVS_FLOW_ATTR_UNSPEC,
504     OVS_FLOW_ATTR_KEY,       /* Sequence of OVS_KEY_ATTR_* attributes\&. */
505     OVS_FLOW_ATTR_ACTIONS,   /* Nested OVS_ACTION_ATTR_* attributes\&. */
506     OVS_FLOW_ATTR_STATS,     /* struct ovs_flow_stats\&. */
507     OVS_FLOW_ATTR_TCP_FLAGS, /* 8-bit OR'd TCP flags\&. */
508     OVS_FLOW_ATTR_USED,      /* u64 msecs last used in monotonic time\&. */
509     OVS_FLOW_ATTR_CLEAR,     /* Flag to clear stats, tcp_flags, used\&. */
510     OVS_FLOW_ATTR_MASK,      /* Sequence of OVS_KEY_ATTR_* attributes\&. */
511     OVS_FLOW_ATTR_PROBE,     /* Flow operation is a feature probe, error
512                   * logging should be suppressed\&. */
513     OVS_FLOW_ATTR_UFID,      /* Variable length unique flow identifier\&. */
514     OVS_FLOW_ATTR_UFID_FLAGS,/* u32 of OVS_UFID_F_*\&. */
515     __OVS_FLOW_ATTR_MAX
516 };
.fi
.SS "enum \fBovs_flow_cmd\fP"

.PP
\fBEnumerator\fP
.in +1c
.TP
\fB\fIOVS_FLOW_CMD_UNSPEC \fP\fP
.TP
\fB\fIOVS_FLOW_CMD_NEW \fP\fP
.TP
\fB\fIOVS_FLOW_CMD_DEL \fP\fP
.TP
\fB\fIOVS_FLOW_CMD_GET \fP\fP
.TP
\fB\fIOVS_FLOW_CMD_SET \fP\fP
.PP
.nf
308                   {
309     OVS_FLOW_CMD_UNSPEC,
310     OVS_FLOW_CMD_NEW,
311     OVS_FLOW_CMD_DEL,
312     OVS_FLOW_CMD_GET,
313     OVS_FLOW_CMD_SET
314 };
.fi
.SS "enum \fBovs_frag_type\fP"
enum ovs_frag_type - IPv4 and IPv6 fragment type : Packet is not a fragment\&. : Packet is a fragment with offset 0\&. : Packet is a fragment with nonzero offset\&.
.PP
Used as the  in &struct \fBovs_key_ipv4\fP and as  &struct \fBovs_key_ipv6\fP\&. 
.PP
\fBEnumerator\fP
.in +1c
.TP
\fB\fIOVS_FRAG_TYPE_NONE \fP\fP
.TP
\fB\fIOVS_FRAG_TYPE_FIRST \fP\fP
.TP
\fB\fIOVS_FRAG_TYPE_LATER \fP\fP
.TP
\fB\fI__OVS_FRAG_TYPE_MAX \fP\fP
.PP
.nf
384                    {
385     OVS_FRAG_TYPE_NONE,
386     OVS_FRAG_TYPE_FIRST,
387     OVS_FRAG_TYPE_LATER,
388     __OVS_FRAG_TYPE_MAX
389 };
.fi
.SS "enum \fBovs_hash_alg\fP"

.PP
\fBEnumerator\fP
.in +1c
.TP
\fB\fIOVS_HASH_ALG_L4 \fP\fP
.PP
.nf
609                   {
610     OVS_HASH_ALG_L4,
611 };
.fi
.SS "enum \fBovs_key_attr\fP"

.PP
\fBEnumerator\fP
.in +1c
.TP
\fB\fIOVS_KEY_ATTR_UNSPEC \fP\fP
.TP
\fB\fIOVS_KEY_ATTR_ENCAP \fP\fP
.TP
\fB\fIOVS_KEY_ATTR_PRIORITY \fP\fP
.TP
\fB\fIOVS_KEY_ATTR_IN_PORT \fP\fP
.TP
\fB\fIOVS_KEY_ATTR_ETHERNET \fP\fP
.TP
\fB\fIOVS_KEY_ATTR_VLAN \fP\fP
.TP
\fB\fIOVS_KEY_ATTR_ETHERTYPE \fP\fP
.TP
\fB\fIOVS_KEY_ATTR_IPV4 \fP\fP
.TP
\fB\fIOVS_KEY_ATTR_IPV6 \fP\fP
.TP
\fB\fIOVS_KEY_ATTR_TCP \fP\fP
.TP
\fB\fIOVS_KEY_ATTR_UDP \fP\fP
.TP
\fB\fIOVS_KEY_ATTR_ICMP \fP\fP
.TP
\fB\fIOVS_KEY_ATTR_ICMPV6 \fP\fP
.TP
\fB\fIOVS_KEY_ATTR_ARP \fP\fP
.TP
\fB\fIOVS_KEY_ATTR_ND \fP\fP
.TP
\fB\fIOVS_KEY_ATTR_SKB_MARK \fP\fP
.TP
\fB\fIOVS_KEY_ATTR_TUNNEL \fP\fP
.TP
\fB\fIOVS_KEY_ATTR_SCTP \fP\fP
.TP
\fB\fIOVS_KEY_ATTR_TCP_FLAGS \fP\fP
.TP
\fB\fIOVS_KEY_ATTR_DP_HASH \fP\fP
.TP
\fB\fIOVS_KEY_ATTR_RECIRC_ID \fP\fP
.TP
\fB\fIOVS_KEY_ATTR_MPLS \fP\fP
.TP
\fB\fI__OVS_KEY_ATTR_MAX \fP\fP
.PP
.nf
321                   {
322     OVS_KEY_ATTR_UNSPEC,
323     OVS_KEY_ATTR_ENCAP, /* Nested set of encapsulated attributes\&. */
324     OVS_KEY_ATTR_PRIORITY,  /* u32 skb->priority */
325     OVS_KEY_ATTR_IN_PORT,   /* u32 OVS dp port number */
326     OVS_KEY_ATTR_ETHERNET,  /* struct ovs_key_ethernet */
327     OVS_KEY_ATTR_VLAN,  /* be16 VLAN TCI */
328     OVS_KEY_ATTR_ETHERTYPE, /* be16 Ethernet type */
329     OVS_KEY_ATTR_IPV4,      /* struct ovs_key_ipv4 */
330     OVS_KEY_ATTR_IPV6,      /* struct ovs_key_ipv6 */
331     OVS_KEY_ATTR_TCP,       /* struct ovs_key_tcp */
332     OVS_KEY_ATTR_UDP,       /* struct ovs_key_udp */
333     OVS_KEY_ATTR_ICMP,      /* struct ovs_key_icmp */
334     OVS_KEY_ATTR_ICMPV6,    /* struct ovs_key_icmpv6 */
335     OVS_KEY_ATTR_ARP,       /* struct ovs_key_arp */
336     OVS_KEY_ATTR_ND,        /* struct ovs_key_nd */
337     OVS_KEY_ATTR_SKB_MARK,  /* u32 skb mark */
338     OVS_KEY_ATTR_TUNNEL,    /* Nested set of ovs_tunnel attributes */
339     OVS_KEY_ATTR_SCTP,      /* struct ovs_key_sctp */
340     OVS_KEY_ATTR_TCP_FLAGS, /* be16 TCP flags\&. */
341     OVS_KEY_ATTR_DP_HASH,   /* u32 hash value\&. Value 0 indicates the hash
342                    is not computed by the datapath\&. */
343     OVS_KEY_ATTR_RECIRC_ID, /* u32 recirc id */
344     OVS_KEY_ATTR_MPLS,      /* array of struct ovs_key_mpls\&.
345                  * The implementation may restrict
346                  * the accepted length of the array\&. */
347 
348 #ifdef __KERNEL__
349     /* Only used within kernel data path\&. */
350     OVS_KEY_ATTR_TUNNEL_INFO,  /* struct ovs_tunnel_info */
351 #endif
352     __OVS_KEY_ATTR_MAX
353 };
.fi
.SS "enum \fBovs_packet_attr\fP"
enum ovs_packet_attr - attributes for OVS_PACKET_* commands\&. : Present for all notifications\&. Contains the entire packet as received, from the start of the Ethernet header onward\&. For OVS_PACKET_CMD_ACTION, OVS_PACKET_ATTR_PACKET reflects changes made by actions preceding OVS_ACTION_ATTR_USERSPACE, but OVS_PACKET_ATTR_KEY is the flow key extracted from the packet as originally received\&. : Present for all notifications\&. Contains the flow key extracted from the packet as nested OVS_KEY_ATTR_* attributes\&. This allows userspace to adapt its flow setup strategy by comparing its notion of the flow key against the kernel's\&. When used with OVS_PACKET_CMD_EXECUTE, only metadata key fields (e\&.g\&. priority, skb mark) are honored\&. All the packet header fields are parsed from the packet instead\&. : Contains actions for the packet\&. Used for OVS_PACKET_CMD_EXECUTE\&. It has nested OVS_ACTION_ATTR_* attributes\&. Also used in upcall when OVS_ACTION_ATTR_USERSPACE has optional OVS_USERSPACE_ATTR_ACTIONS attribute\&. : Present for an OVS_PACKET_CMD_ACTION notification if the OVS_ACTION_ATTR_USERSPACE action specified an OVS_USERSPACE_ATTR_USERDATA attribute, with the same length and content specified there\&. : Present for an OVS_PACKET_CMD_ACTION notification if the OVS_ACTION_ATTR_USERSPACE action specified an OVS_USERSPACE_ATTR_EGRESS_TUN_PORT attribute, which is sent only if the output port is actually a tunnel port\&. Contains the output tunnel key extracted from the packet as nested OVS_TUNNEL_KEY_ATTR_* attributes\&. These attributes follow the &struct \fBovs_header\fP within the Generic Netlink payload for OVS_PACKET_* commands\&. 
.PP
\fBEnumerator\fP
.in +1c
.TP
\fB\fIOVS_PACKET_ATTR_UNSPEC \fP\fP
.TP
\fB\fIOVS_PACKET_ATTR_PACKET \fP\fP
.TP
\fB\fIOVS_PACKET_ATTR_KEY \fP\fP
.TP
\fB\fIOVS_PACKET_ATTR_ACTIONS \fP\fP
.TP
\fB\fIOVS_PACKET_ATTR_USERDATA \fP\fP
.TP
\fB\fIOVS_PACKET_ATTR_EGRESS_TUN_KEY \fP\fP
.TP
\fB\fIOVS_PACKET_ATTR_UNUSED1 \fP\fP
.TP
\fB\fIOVS_PACKET_ATTR_UNUSED2 \fP\fP
.TP
\fB\fIOVS_PACKET_ATTR_PROBE \fP\fP
.TP
\fB\fI__OVS_PACKET_ATTR_MAX \fP\fP
.PP
.nf
193                      {
194     OVS_PACKET_ATTR_UNSPEC,
195     OVS_PACKET_ATTR_PACKET,      /* Packet data\&. */
196     OVS_PACKET_ATTR_KEY,         /* Nested OVS_KEY_ATTR_* attributes\&. */
197     OVS_PACKET_ATTR_ACTIONS,     /* Nested OVS_ACTION_ATTR_* attributes\&. */
198     OVS_PACKET_ATTR_USERDATA,    /* OVS_ACTION_ATTR_USERSPACE arg\&. */
199     OVS_PACKET_ATTR_EGRESS_TUN_KEY,  /* Nested OVS_TUNNEL_KEY_ATTR_*
200                         attributes\&. */
201     OVS_PACKET_ATTR_UNUSED1,
202     OVS_PACKET_ATTR_UNUSED2,
203     OVS_PACKET_ATTR_PROBE,      /* Packet operation is a feature probe,
204                        error logging should be suppressed\&. */
205     __OVS_PACKET_ATTR_MAX
206 };
.fi
.SS "enum \fBovs_packet_cmd\fP"

.PP
\fBEnumerator\fP
.in +1c
.TP
\fB\fIOVS_PACKET_CMD_UNSPEC \fP\fP
.TP
\fB\fIOVS_PACKET_CMD_MISS \fP\fP
.TP
\fB\fIOVS_PACKET_CMD_ACTION \fP\fP
.TP
\fB\fIOVS_PACKET_CMD_EXECUTE \fP\fP
.PP
.nf
153                     {
154     OVS_PACKET_CMD_UNSPEC,
155 
156     /* Kernel-to-user notifications\&. */
157     OVS_PACKET_CMD_MISS,    /* Flow table miss\&. */
158     OVS_PACKET_CMD_ACTION,  /* OVS_ACTION_ATTR_USERSPACE action\&. */
159 
160     /* Userspace commands\&. */
161     OVS_PACKET_CMD_EXECUTE  /* Apply actions to a packet\&. */
162 };
.fi
.SS "enum \fBovs_sample_attr\fP"
enum ovs_sample_attr - Attributes for OVS_ACTION_ATTR_SAMPLE action\&. : 32-bit fraction of packets to sample with \&. A value of 0 samples no packets, a value of UINT32_MAX samples all packets and intermediate values sample intermediate fractions of packets\&. : Set of actions to execute in sampling event\&. Actions are passed as nested attributes\&.
.PP
Executes the specified actions with the given probability on a per-packet basis\&. 
.PP
\fBEnumerator\fP
.in +1c
.TP
\fB\fIOVS_SAMPLE_ATTR_UNSPEC \fP\fP
.TP
\fB\fIOVS_SAMPLE_ATTR_PROBABILITY \fP\fP
.TP
\fB\fIOVS_SAMPLE_ATTR_ACTIONS \fP\fP
.TP
\fB\fI__OVS_SAMPLE_ATTR_MAX \fP\fP
.PP
.nf
542                      {
543     OVS_SAMPLE_ATTR_UNSPEC,
544     OVS_SAMPLE_ATTR_PROBABILITY, /* u32 number */
545     OVS_SAMPLE_ATTR_ACTIONS,     /* Nested OVS_ACTION_ATTR_* attributes\&. */
546     __OVS_SAMPLE_ATTR_MAX,
547 };
.fi
.SS "enum \fBovs_tunnel_key_attr\fP"

.PP
\fBEnumerator\fP
.in +1c
.TP
\fB\fIOVS_TUNNEL_KEY_ATTR_ID \fP\fP
.TP
\fB\fIOVS_TUNNEL_KEY_ATTR_IPV4_SRC \fP\fP
.TP
\fB\fIOVS_TUNNEL_KEY_ATTR_IPV4_DST \fP\fP
.TP
\fB\fIOVS_TUNNEL_KEY_ATTR_TOS \fP\fP
.TP
\fB\fIOVS_TUNNEL_KEY_ATTR_TTL \fP\fP
.TP
\fB\fIOVS_TUNNEL_KEY_ATTR_DONT_FRAGMENT \fP\fP
.TP
\fB\fIOVS_TUNNEL_KEY_ATTR_CSUM \fP\fP
.TP
\fB\fIOVS_TUNNEL_KEY_ATTR_OAM \fP\fP
.TP
\fB\fIOVS_TUNNEL_KEY_ATTR_GENEVE_OPTS \fP\fP
.TP
\fB\fIOVS_TUNNEL_KEY_ATTR_TP_SRC \fP\fP
.TP
\fB\fIOVS_TUNNEL_KEY_ATTR_TP_DST \fP\fP
.TP
\fB\fIOVS_TUNNEL_KEY_ATTR_VXLAN_OPTS \fP\fP
.TP
\fB\fI__OVS_TUNNEL_KEY_ATTR_MAX \fP\fP
.PP
.nf
357                          {
358     OVS_TUNNEL_KEY_ATTR_ID,                 /* be64 Tunnel ID */
359     OVS_TUNNEL_KEY_ATTR_IPV4_SRC,           /* be32 src IP address\&. */
360     OVS_TUNNEL_KEY_ATTR_IPV4_DST,           /* be32 dst IP address\&. */
361     OVS_TUNNEL_KEY_ATTR_TOS,                /* u8 Tunnel IP ToS\&. */
362     OVS_TUNNEL_KEY_ATTR_TTL,                /* u8 Tunnel IP TTL\&. */
363     OVS_TUNNEL_KEY_ATTR_DONT_FRAGMENT,      /* No argument, set DF\&. */
364     OVS_TUNNEL_KEY_ATTR_CSUM,               /* No argument\&. CSUM packet\&. */
365     OVS_TUNNEL_KEY_ATTR_OAM,                /* No argument\&. OAM frame\&.  */
366     OVS_TUNNEL_KEY_ATTR_GENEVE_OPTS,        /* Array of Geneve options\&. */
367     OVS_TUNNEL_KEY_ATTR_TP_SRC,     /* be16 src Transport Port\&. */
368     OVS_TUNNEL_KEY_ATTR_TP_DST,     /* be16 dst Transport Port\&. */
369     OVS_TUNNEL_KEY_ATTR_VXLAN_OPTS,     /* Nested OVS_VXLAN_EXT_* */
370     __OVS_TUNNEL_KEY_ATTR_MAX
371 };
.fi
.SS "enum \fBovs_userspace_attr\fP"
enum ovs_userspace_attr - Attributes for OVS_ACTION_ATTR_USERSPACE action\&. : u32 Netlink PID to which the OVS_PACKET_CMD_ACTION message should be sent\&. Required\&. : If present, its variable-length argument is copied to the OVS_PACKET_CMD_ACTION message as OVS_PACKET_ATTR_USERDATA\&. : If present, u32 output port to get tunnel info\&. : If present, send actions with upcall\&. 
.PP
\fBEnumerator\fP
.in +1c
.TP
\fB\fIOVS_USERSPACE_ATTR_UNSPEC \fP\fP
.TP
\fB\fIOVS_USERSPACE_ATTR_PID \fP\fP
.TP
\fB\fIOVS_USERSPACE_ATTR_USERDATA \fP\fP
.TP
\fB\fIOVS_USERSPACE_ATTR_EGRESS_TUN_PORT \fP\fP
.TP
\fB\fIOVS_USERSPACE_ATTR_ACTIONS \fP\fP
.TP
\fB\fI__OVS_USERSPACE_ATTR_MAX \fP\fP
.PP
.nf
561                         {
562     OVS_USERSPACE_ATTR_UNSPEC,
563     OVS_USERSPACE_ATTR_PID,       /* u32 Netlink PID to receive upcalls\&. */
564     OVS_USERSPACE_ATTR_USERDATA,  /* Optional user-specified cookie\&. */
565     OVS_USERSPACE_ATTR_EGRESS_TUN_PORT,  /* Optional, u32 output port
566                           * to get tunnel info\&. */
567     OVS_USERSPACE_ATTR_ACTIONS,   /* Optional flag to get actions\&. */
568     __OVS_USERSPACE_ATTR_MAX
569 };
.fi
.SS "enum \fBovs_vport_attr\fP"
enum ovs_vport_attr - attributes for OVS_VPORT_* commands\&. : 32-bit port number within datapath\&. : 32-bit OVS_VPORT_TYPE_* constant describing the type of vport\&. : Name of vport\&. For a vport based on a network device this is the name of the network device\&. Maximum length IFNAMSIZ-1 bytes plus a null terminator\&. : Vport-specific configuration information\&. : The array of Netlink socket pids in userspace among which OVS_PACKET_CMD_MISS upcalls will be distributed for packets received on this port\&. If this is a single-element array of value 0, upcalls should not be sent\&. : A &struct \fBovs_vport_stats\fP giving statistics for packets sent or received through the vport\&.
.PP
These attributes follow the &struct \fBovs_header\fP within the Generic Netlink payload for OVS_VPORT_* commands\&.
.PP
For OVS_VPORT_CMD_NEW requests, the OVS_VPORT_ATTR_TYPE and OVS_VPORT_ATTR_NAME attributes are required\&. OVS_VPORT_ATTR_PORT_NO is optional; if not specified a free port number is automatically selected\&. Whether OVS_VPORT_ATTR_OPTIONS is required or optional depends on the type of vport\&. OVS_VPORT_ATTR_STATS is optional and other attributes are ignored\&.
.PP
For other requests, if OVS_VPORT_ATTR_NAME is specified then it is used to look up the vport to operate on; otherwise dp_idx from the &struct \fBovs_header\fP plus OVS_VPORT_ATTR_PORT_NO determine the vport\&. 
.PP
\fBEnumerator\fP
.in +1c
.TP
\fB\fIOVS_VPORT_ATTR_UNSPEC \fP\fP
.TP
\fB\fIOVS_VPORT_ATTR_PORT_NO \fP\fP
.TP
\fB\fIOVS_VPORT_ATTR_TYPE \fP\fP
.TP
\fB\fIOVS_VPORT_ATTR_NAME \fP\fP
.TP
\fB\fIOVS_VPORT_ATTR_OPTIONS \fP\fP
.TP
\fB\fIOVS_VPORT_ATTR_UPCALL_PID \fP\fP
.TP
\fB\fIOVS_VPORT_ATTR_STATS \fP\fP
.TP
\fB\fI__OVS_VPORT_ATTR_MAX \fP\fP
.PP
.nf
269                     {
270     OVS_VPORT_ATTR_UNSPEC,
271     OVS_VPORT_ATTR_PORT_NO, /* u32 port number within datapath */
272     OVS_VPORT_ATTR_TYPE,    /* u32 OVS_VPORT_TYPE_* constant\&. */
273     OVS_VPORT_ATTR_NAME,    /* string name, up to IFNAMSIZ bytes long */
274     OVS_VPORT_ATTR_OPTIONS, /* nested attributes, varies by vport type */
275     OVS_VPORT_ATTR_UPCALL_PID, /* array of u32 Netlink socket PIDs for */
276                 /* receiving upcalls */
277     OVS_VPORT_ATTR_STATS,   /* struct ovs_vport_stats */
278     __OVS_VPORT_ATTR_MAX
279 };
.fi
.SS "enum \fBovs_vport_cmd\fP"

.PP
\fBEnumerator\fP
.in +1c
.TP
\fB\fIOVS_VPORT_CMD_UNSPEC \fP\fP
.TP
\fB\fIOVS_VPORT_CMD_NEW \fP\fP
.TP
\fB\fIOVS_VPORT_CMD_DEL \fP\fP
.TP
\fB\fIOVS_VPORT_CMD_GET \fP\fP
.TP
\fB\fIOVS_VPORT_CMD_SET \fP\fP
.PP
.nf
216                    {
217     OVS_VPORT_CMD_UNSPEC,
218     OVS_VPORT_CMD_NEW,
219     OVS_VPORT_CMD_DEL,
220     OVS_VPORT_CMD_GET,
221     OVS_VPORT_CMD_SET
222 };
.fi
.SS "enum \fBovs_vport_type\fP"

.PP
\fBEnumerator\fP
.in +1c
.TP
\fB\fIOVS_VPORT_TYPE_UNSPEC \fP\fP
.TP
\fB\fIOVS_VPORT_TYPE_NETDEV \fP\fP
.TP
\fB\fIOVS_VPORT_TYPE_INTERNAL \fP\fP
.TP
\fB\fIOVS_VPORT_TYPE_GRE \fP\fP
.TP
\fB\fIOVS_VPORT_TYPE_VXLAN \fP\fP
.TP
\fB\fIOVS_VPORT_TYPE_GENEVE \fP\fP
.TP
\fB\fIOVS_VPORT_TYPE_GRE64 \fP\fP
.TP
\fB\fIOVS_VPORT_TYPE_LISP \fP\fP
.TP
\fB\fIOVS_VPORT_TYPE_STT \fP\fP
.TP
\fB\fI__OVS_VPORT_TYPE_MAX \fP\fP
.PP
.nf
224                     {
225     OVS_VPORT_TYPE_UNSPEC,
226     OVS_VPORT_TYPE_NETDEV,   /* network device */
227     OVS_VPORT_TYPE_INTERNAL, /* network device implemented by datapath */
228     OVS_VPORT_TYPE_GRE,      /* GRE tunnel\&. */
229     OVS_VPORT_TYPE_VXLAN,    /* VXLAN tunnel\&. */
230     OVS_VPORT_TYPE_GENEVE,   /* Geneve tunnel\&. */
231     OVS_VPORT_TYPE_GRE64 = 104, /* GRE tunnel with 64-bit keys */
232     OVS_VPORT_TYPE_LISP = 105,  /* LISP tunnel */
233     OVS_VPORT_TYPE_STT = 106, /* STT tunnel */
234     __OVS_VPORT_TYPE_MAX
235 };
.fi
.SH "Author"
.PP 
Generated automatically by Doxygen for ovs datapath from the source code\&.
