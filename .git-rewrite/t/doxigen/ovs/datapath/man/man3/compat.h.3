.TH "/home/vladn/git/ovs/datapath/compat.h" 3 "Mon Aug 17 2015" "ovs datapath" \" -*- nroff -*-
.ad l
.nh
.SH NAME
/home/vladn/git/ovs/datapath/compat.h \- 
.SH SYNOPSIS
.br
.PP
\fC#include <linux/in\&.h>\fP
.br
\fC#include <linux/in_route\&.h>\fP
.br
\fC#include <linux/netlink\&.h>\fP
.br
\fC#include <net/route\&.h>\fP
.br
\fC#include <net/xfrm\&.h>\fP
.br

.SS "Macros"

.in +1c
.ti -1c
.RI "#define \fBGROUP_ID\fP(grp)   0"
.br
.ti -1c
.RI "#define \fBrt_dst\fP(rt)   (rt->\fBdst\fP)"
.br
.ti -1c
.RI "#define \fBinet_sport\fP(sk)   (inet_sk(sk)->inet_sport)"
.br
.in -1c
.SS "Functions"

.in +1c
.ti -1c
.RI "static struct rtable * \fBfind_route\fP (struct net *net, __be32 *saddr, __be32 daddr, u8 ipproto, u8 \fBtos\fP, u32 \fBskb_mark\fP)"
.br
.ti -1c
.RI "static \fBbool\fP \fBskb_encapsulation\fP (struct sk_buff *skb)"
.br
.in -1c
.SH "Macro Definition Documentation"
.PP 
.SS "#define GROUP_ID(grp)   0"

.SS "#define inet_sport(sk)   (inet_sk(sk)->inet_sport)"

.SS "#define rt_dst(rt)   (rt->\fBdst\fP)"

.SH "Function Documentation"
.PP 
.SS "static struct rtable* find_route (struct net * net, __be32 * saddr, __be32 daddr, u8 ipproto, u8 tos, u32 skb_mark)\fC [static]\fP"

.PP
.nf
49 {
50     struct rtable *rt;
51     /* Tunnel configuration keeps DSCP part of TOS bits, But Linux
52      * router expect RT_TOS bits only\&.
53      */
54 
55 #if LINUX_VERSION_CODE < KERNEL_VERSION(2,6,39)
56     struct flowi fl = { \&.nl_u = { \&.ip4_u = {
57                     \&.daddr = daddr,
58                     \&.saddr = *saddr,
59                     \&.tos   = RT_TOS(tos) } },
60                     \&.mark = skb_mark,
61                     \&.proto = ipproto };
62 
63     if (unlikely(ip_route_output_key(net, &rt, &fl)))
64         return ERR_PTR(-EADDRNOTAVAIL);
65     *saddr = fl\&.nl_u\&.ip4_u\&.saddr;
66     return rt;
67 #else
68     struct flowi4 fl = { \&.daddr = daddr,
69                  \&.saddr = *saddr,
70                  \&.flowi4_tos = RT_TOS(tos),
71                  \&.flowi4_mark = skb_mark,
72                  \&.flowi4_proto = ipproto };
73 
74     rt = ip_route_output_key(net, &fl);
75     *saddr = fl\&.saddr;
76     return rt;
77 #endif
78 }
.fi
.SS "static \fBbool\fP skb_encapsulation (struct sk_buff * skb)\fC [inline]\fP, \fC [static]\fP"

.PP
.nf
82 {
83     return skb->encapsulation;
84 }
.fi
.SH "Author"
.PP 
Generated automatically by Doxygen for ovs datapath from the source code\&.
