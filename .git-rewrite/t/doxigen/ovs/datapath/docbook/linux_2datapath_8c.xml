<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="linux_2datapath_8c">
    <title>datapath.c File Reference</title>
    <programlisting>#include &lt;linux/init.h&gt;</programlisting>
    <programlisting>#include &lt;linux/module.h&gt;</programlisting>
    <programlisting>#include &lt;linux/if_arp.h&gt;</programlisting>
    <programlisting>#include &lt;linux/if_vlan.h&gt;</programlisting>
    <programlisting>#include &lt;linux/in.h&gt;</programlisting>
    <programlisting>#include &lt;linux/ip.h&gt;</programlisting>
    <programlisting>#include &lt;linux/jhash.h&gt;</programlisting>
    <programlisting>#include &lt;linux/delay.h&gt;</programlisting>
    <programlisting>#include &lt;linux/time.h&gt;</programlisting>
    <programlisting>#include &lt;linux/etherdevice.h&gt;</programlisting>
    <programlisting>#include &lt;linux/genetlink.h&gt;</programlisting>
    <programlisting>#include &lt;linux/kernel.h&gt;</programlisting>
    <programlisting>#include &lt;linux/kthread.h&gt;</programlisting>
    <programlisting>#include &lt;linux/mutex.h&gt;</programlisting>
    <programlisting>#include &lt;linux/percpu.h&gt;</programlisting>
    <programlisting>#include &lt;linux/rcupdate.h&gt;</programlisting>
    <programlisting>#include &lt;linux/tcp.h&gt;</programlisting>
    <programlisting>#include &lt;linux/udp.h&gt;</programlisting>
    <programlisting>#include &lt;linux/version.h&gt;</programlisting>
    <programlisting>#include &lt;linux/ethtool.h&gt;</programlisting>
    <programlisting>#include &lt;linux/wait.h&gt;</programlisting>
    <programlisting>#include &lt;asm/div64.h&gt;</programlisting>
    <programlisting>#include &lt;linux/highmem.h&gt;</programlisting>
    <programlisting>#include &lt;linux/netfilter_bridge.h&gt;</programlisting>
    <programlisting>#include &lt;linux/netfilter_ipv4.h&gt;</programlisting>
    <programlisting>#include &lt;linux/inetdevice.h&gt;</programlisting>
    <programlisting>#include &lt;linux/list.h&gt;</programlisting>
    <programlisting>#include &lt;linux/openvswitch.h&gt;</programlisting>
    <programlisting>#include &lt;linux/rculist.h&gt;</programlisting>
    <programlisting>#include &lt;linux/dmi.h&gt;</programlisting>
    <programlisting>#include &lt;net/genetlink.h&gt;</programlisting>
    <programlisting>#include &lt;net/net_namespace.h&gt;</programlisting>
    <programlisting>#include &lt;net/netns/generic.h&gt;</programlisting>
    <programlisting>#include &quot;datapath.h&quot;</programlisting>
    <programlisting>#include &quot;flow.h&quot;</programlisting>
    <programlisting>#include &quot;flow_table.h&quot;</programlisting>
    <programlisting>#include &quot;flow_netlink.h&quot;</programlisting>
    <programlisting>#include &quot;vlan.h&quot;</programlisting>
    <programlisting>#include &quot;vport-internal_dev.h&quot;</programlisting>
    <programlisting>#include &quot;vport-netdev.h&quot;</programlisting>
<para>Include dependency diagram for datapath.c</para>
<para>
    <figure>
        <title>Dependency diagram</title>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="1" fileref="linux_2datapath_8c__incl.png"></imagedata>
            </imageobject>
        </mediaobject>
    </figure>
</para>
<para>Included by dependency diagram for datapath.c</para>
<para>
    <figure>
        <title>Dependency diagram</title>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="1" fileref="linux_2datapath_8c__dep__incl.png"></imagedata>
            </imageobject>
        </mediaobject>
    </figure>
</para>
        <section>
            <title>Macros</title>
            <para>
                <itemizedlist>
                    <listitem>
                            <para>#define <link linkend="linux_2datapath_8c_1a1f8c165bf4196327bc3abff648276d92">pr_fmt</link> KBUILD_MODNAME &quot;: &quot; fmt</para>
                    </listitem>
                </itemizedlist>
            </para>
        </section>
        <section>
            <title>Variables</title>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>int <link linkend="datapath_8h_1ace140298dc2b59b3d77d59c0a210de29">ovs_net_id</link> <link linkend="linux_2datapath_8c_1a50bac238082a6952a4dadad6299cc4b3">__read_mostly</link></para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>static struct <link linkend="genetlink_8h_1aba961c2c372b7122ad0c8ae5e7af2f3b">genl_family</link> <link linkend="linux_2datapath_8c_1a709033900c84449b9f83cb62cecb1627">dp_packet_genl_family</link></para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>static struct <link linkend="genetlink_8h_1aba961c2c372b7122ad0c8ae5e7af2f3b">genl_family</link> <link linkend="linux_2datapath_8c_1af07853d514acd11f9f0d23494b6a2f9e">dp_flow_genl_family</link></para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>static struct <link linkend="genetlink_8h_1aba961c2c372b7122ad0c8ae5e7af2f3b">genl_family</link> <link linkend="linux_2datapath_8c_1a00b4c28b2a15cad709af53b6484fc45c">dp_datapath_genl_family</link></para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>static const struct nla_policy <link linkend="linux_2datapath_8c_1aad79544f457c7a323273d328dafff886">flow_policy</link></para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>static struct genl_multicast_group <link linkend="linux_2datapath_8c_1ae43fcc307ac0fa091a736d4687c7f884">ovs_dp_flow_multicast_group</link></para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>static struct genl_multicast_group <link linkend="linux_2datapath_8c_1afa5d1f090aee506896ff5ef56b4053e1">ovs_dp_datapath_multicast_group</link></para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>struct genl_multicast_group <link linkend="linux_2datapath_8c_1a9dd8d4307b50fdee582eb4013d89eb7b">ovs_dp_vport_multicast_group</link></para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>static const struct nla_policy <link linkend="linux_2datapath_8c_1aaef8775f67f989a9ff396e2aa6f6f3e2">packet_policy</link></para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>static struct genl_ops <link linkend="linux_2datapath_8c_1a75ed1b368ac93a17ed4d04c82b892be9">dp_packet_genl_ops</link></para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>static struct genl_ops <link linkend="linux_2datapath_8c_1a42bdb3978421f4f0b3a1be828226b271">dp_flow_genl_ops</link></para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>static const struct nla_policy <link linkend="linux_2datapath_8c_1a34f2da191c04c403e206dacb0c3d2a6f">datapath_policy</link></para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>static struct genl_ops <link linkend="linux_2datapath_8c_1a29acb4bb9ad0b3d7af71e628bf516372">dp_datapath_genl_ops</link></para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>static const struct nla_policy <link linkend="linux_2datapath_8c_1af3f5c0f1eb12c1eb1a2494f265dda98a">vport_policy</link></para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>static struct genl_ops <link linkend="linux_2datapath_8c_1a5a28211e3b7e9a5cf7ccf8e81b8bfa8e">dp_vport_genl_ops</link></para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>struct <link linkend="genetlink_8h_1aba961c2c372b7122ad0c8ae5e7af2f3b">genl_family</link> <link linkend="linux_2datapath_8c_1a69bf55f33e234bc4b78e6eeee1d603fd">dp_vport_genl_family</link></para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>static struct <link linkend="genetlink_8h_1aba961c2c372b7122ad0c8ae5e7af2f3b">genl_family</link> * <link linkend="linux_2datapath_8c_1ae945344e649c305788038f5bc09bc817">dp_genl_families</link></para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>static struct pernet_operations <link linkend="linux_2datapath_8c_1a3a9f5b1a35fcb90938194f22dc2d0f14">ovs_net_ops</link></para>
                    </listitem>
                </itemizedlist>
            </para>
        </section>
        <section>
            <title>Functions</title>
            <para>
                <itemizedlist>
                    <listitem>
                        <para> <link linkend="linux_2datapath_8c_1abf00303edb3bc87ac06f165737f618ec">EXPORT_SYMBOL_GPL</link> (
<link linkend="datapath_8h_1ace140298dc2b59b3d77d59c0a210de29">ovs_net_id</link> )</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>static <link linkend="types_8h_1afaa87723b8417d40fcf45b7330261ef9">bool</link> <link linkend="linux_2datapath_8c_1aba3b63f0e73c9ea6ecb8b7aa5d913724">ovs_must_notify</link> (
struct <link linkend="genetlink_8h_1aba961c2c372b7122ad0c8ae5e7af2f3b">genl_family</link> * family, struct genl_info * info, unsigned int group)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>static void <link linkend="linux_2datapath_8c_1a67f527ad1164ff0d67fe854584ced567">ovs_notify</link> (
struct <link linkend="genetlink_8h_1aba961c2c372b7122ad0c8ae5e7af2f3b">genl_family</link> * family, struct genl_multicast_group * grp, struct sk_buff * skb, struct genl_info * info)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>static <link linkend="linux_2datapath_8c_1aa489fc945a5cabc6b1efbf3b886ee600">DEFINE_MUTEX</link> (
ovs_mutex )</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>void <link linkend="linux_2datapath_8c_1a092c1f450b78a173c890ed4c56839e1a">ovs_lock</link> (
void )</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>void <link linkend="linux_2datapath_8c_1ac3ccfd98a880ed6d2480209be0d16680">ovs_unlock</link> (
void )</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>static int <link linkend="linux_2datapath_8c_1a2c10ba8a23a8cb2f14b7f7684e5ebb5d">queue_gso_packets</link> (
struct <link linkend="structdatapath">datapath</link> * dp, struct sk_buff * , const struct <link linkend="structsw__flow__key">sw_flow_key</link> * , const struct <link linkend="structdp__upcall__info">dp_upcall_info</link> * )</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>static int <link linkend="linux_2datapath_8c_1a549c591fae56562523f243abbe4a1e3e">queue_userspace_packet</link> (
struct <link linkend="structdatapath">datapath</link> * dp, struct sk_buff * , const struct <link linkend="structsw__flow__key">sw_flow_key</link> * , const struct <link linkend="structdp__upcall__info">dp_upcall_info</link> * )</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>static struct <link linkend="structdatapath">datapath</link> * <link linkend="linux_2datapath_8c_1ab3f598cca9ed98120cc11daa11690da8">get_dp_rcu</link> (
struct net * net, int dp_ifindex)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>static struct <link linkend="structdatapath">datapath</link> * <link linkend="linux_2datapath_8c_1a1107d4fd386aa6551511140b5405e1d3">get_dp</link> (
struct net * net, int dp_ifindex)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>const char * <link linkend="linux_2datapath_8c_1a6a23196916bb5de4994f901bdf1aba2d">ovs_dp_name</link> (
const struct <link linkend="structdatapath">datapath</link> * dp)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>static int <link linkend="linux_2datapath_8c_1a2c4c60ba176a755749744f7b01aa6edd">get_dpifindex</link> (
const struct <link linkend="structdatapath">datapath</link> * dp)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>static void <link linkend="linux_2datapath_8c_1a5f329d1e5ef78eb6e9b4aa63c2d97e91">destroy_dp_rcu</link> (
struct rcu_head * rcu)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>static struct hlist_head * <link linkend="linux_2datapath_8c_1af291a723340e4e1bd38b4b14e7f4377a">vport_hash_bucket</link> (
const struct <link linkend="structdatapath">datapath</link> * dp, u16 port_no)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>struct <link linkend="structvport">vport</link> * <link linkend="linux_2datapath_8c_1a0a9ec01692e1fdcb15a9a294d3789af0">ovs_lookup_vport</link> (
const struct <link linkend="structdatapath">datapath</link> * dp, u16 port_no)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>static struct <link linkend="structvport">vport</link> * <link linkend="linux_2datapath_8c_1afac95a3e755fe3b0906ccc72d052cbe1">new_vport</link> (
const struct <link linkend="structvport__parms">vport_parms</link> * parms)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>void <link linkend="linux_2datapath_8c_1a560b5f5f97a839287201f7486c53447e">ovs_dp_detach_port</link> (
struct <link linkend="structvport">vport</link> * p)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>void <link linkend="linux_2datapath_8c_1aa52cbaf8a4e68129287bfc8ddcde0711">ovs_dp_process_packet</link> (
struct sk_buff * skb, struct <link linkend="structsw__flow__key">sw_flow_key</link> * key)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>int <link linkend="linux_2datapath_8c_1a229b5c7d0158ebc24a90f44de0df0040">ovs_dp_upcall</link> (
struct <link linkend="structdatapath">datapath</link> * dp, struct sk_buff * skb, const struct <link linkend="structsw__flow__key">sw_flow_key</link> * key, const struct <link linkend="structdp__upcall__info">dp_upcall_info</link> * upcall_info)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>static size_t <link linkend="linux_2datapath_8c_1a845617ce8ad4e18b0c54961d796a0aeb">upcall_msg_size</link> (
const struct <link linkend="structdp__upcall__info">dp_upcall_info</link> * upcall_info, unsigned int hdrlen)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>static int <link linkend="linux_2datapath_8c_1a20b16b839bd3116f7dbad5719b02c115">ovs_packet_cmd_execute</link> (
struct sk_buff * skb, struct genl_info * info)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>static void <link linkend="linux_2datapath_8c_1a689a2b3c19c9cdebecfb266acf5ba221">get_dp_stats</link> (
const struct <link linkend="structdatapath">datapath</link> * dp, struct <link linkend="structovs__dp__stats">ovs_dp_stats</link> * stats, struct <link linkend="structovs__dp__megaflow__stats">ovs_dp_megaflow_stats</link> * mega_stats)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>static <link linkend="types_8h_1afaa87723b8417d40fcf45b7330261ef9">bool</link> <link linkend="linux_2datapath_8c_1a4d912d3ed7dba8789b726280b6dea3a4">should_fill_key</link> (
const struct <link linkend="structsw__flow__id">sw_flow_id</link> * sfid, uint32_t ufid_flags)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>static <link linkend="types_8h_1afaa87723b8417d40fcf45b7330261ef9">bool</link> <link linkend="linux_2datapath_8c_1acef91dffd31fb70fa6c94e11ad08805b">should_fill_mask</link> (
uint32_t ufid_flags)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>static <link linkend="types_8h_1afaa87723b8417d40fcf45b7330261ef9">bool</link> <link linkend="linux_2datapath_8c_1a05dcb72a9103046c5721d03a1592291f">should_fill_actions</link> (
uint32_t ufid_flags)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>static size_t <link linkend="linux_2datapath_8c_1a5f17e0449c315970d82161c131e70dbd">ovs_flow_cmd_msg_size</link> (
const struct <link linkend="structsw__flow__actions">sw_flow_actions</link> * acts, const struct <link linkend="structsw__flow__id">sw_flow_id</link> * sfid, uint32_t ufid_flags)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>static int <link linkend="linux_2datapath_8c_1a832dcdda5999f2e7fadd72b2ad2373f3">ovs_flow_cmd_fill_stats</link> (
const struct <link linkend="structsw__flow">sw_flow</link> * flow, struct sk_buff * skb)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>static int <link linkend="linux_2datapath_8c_1ad6ce625c1cb24262cddbabe479987986">ovs_flow_cmd_fill_actions</link> (
const struct <link linkend="structsw__flow">sw_flow</link> * flow, struct sk_buff * skb, int skb_orig_len)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>static int <link linkend="linux_2datapath_8c_1a7b415415fa0d84bab45258cd3080f2c7">ovs_flow_cmd_fill_info</link> (
const struct <link linkend="structsw__flow">sw_flow</link> * flow, int dp_ifindex, struct sk_buff * skb, u32 portid, u32 seq, u32 flags, u8 cmd, u32 ufid_flags)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>static struct sk_buff * <link linkend="linux_2datapath_8c_1ac6daf72fcac45a9bd571dec78216e197">ovs_flow_cmd_alloc_info</link> (
const struct <link linkend="structsw__flow__actions">sw_flow_actions</link> * acts, const struct <link linkend="structsw__flow__id">sw_flow_id</link> * sfid, struct genl_info * info, <link linkend="types_8h_1afaa87723b8417d40fcf45b7330261ef9">bool</link> always, uint32_t ufid_flags)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>static struct sk_buff * <link linkend="linux_2datapath_8c_1afbfb35c0b3684e82dce573f04491ad1e">ovs_flow_cmd_build_info</link> (
const struct <link linkend="structsw__flow">sw_flow</link> * flow, int dp_ifindex, struct genl_info * info, u8 cmd, <link linkend="types_8h_1afaa87723b8417d40fcf45b7330261ef9">bool</link> always, u32 ufid_flags)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>static int <link linkend="linux_2datapath_8c_1ac8895cf604439184dad96f70e335afe2">ovs_flow_cmd_new</link> (
struct sk_buff * skb, struct genl_info * info)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>static struct <link linkend="structsw__flow__actions">sw_flow_actions</link> * <link linkend="linux_2datapath_8c_1aac07273dc62dc714973b44be41f9bf7f">get_flow_actions</link> (
const struct nlattr * a, const struct <link linkend="structsw__flow__key">sw_flow_key</link> * key, const struct <link linkend="structsw__flow__mask">sw_flow_mask</link> * mask, <link linkend="types_8h_1afaa87723b8417d40fcf45b7330261ef9">bool</link> log)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>static int <link linkend="linux_2datapath_8c_1a4c6c2d9354cb73a6300a9b3c9cd2a114">ovs_flow_cmd_set</link> (
struct sk_buff * skb, struct genl_info * info)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>static int <link linkend="linux_2datapath_8c_1a747a4726ec84c751acb3048a515cef86">ovs_flow_cmd_get</link> (
struct sk_buff * skb, struct genl_info * info)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>static int <link linkend="linux_2datapath_8c_1aa05c62aa6531c0e0312126a21a8d99a5">ovs_flow_cmd_del</link> (
struct sk_buff * skb, struct genl_info * info)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>static int <link linkend="linux_2datapath_8c_1a4759993b01f8bc67711ecacacdf43976">ovs_flow_cmd_dump</link> (
struct sk_buff * skb, struct netlink_callback * cb)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>static size_t <link linkend="linux_2datapath_8c_1aab015cdb7b4e0d2fa66da1b72963df67">ovs_dp_cmd_msg_size</link> (
void )</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>static int <link linkend="linux_2datapath_8c_1a0c18d2b438aba3739c2a36e172cfe3ea">ovs_dp_cmd_fill_info</link> (
struct <link linkend="structdatapath">datapath</link> * dp, struct sk_buff * skb, u32 portid, u32 seq, u32 flags, u8 cmd)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>static struct sk_buff * <link linkend="linux_2datapath_8c_1ad01db8513d30c057f1ea10532ebc8b1e">ovs_dp_cmd_alloc_info</link> (
struct genl_info * info)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>static struct <link linkend="structdatapath">datapath</link> * <link linkend="linux_2datapath_8c_1a774dc1bd6a39e68ebac48e55688a8574">lookup_datapath</link> (
struct net * net, const struct <link linkend="structovs__header">ovs_header</link> * ovs_header, struct nlattr * a)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>static void <link linkend="linux_2datapath_8c_1aba7a59d6ae252953be557d7478f7332f">ovs_dp_reset_user_features</link> (
struct sk_buff * skb, struct genl_info * info)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>static void <link linkend="linux_2datapath_8c_1a2c763b1da99cce1a426140794eaf8f03">ovs_dp_change</link> (
struct <link linkend="structdatapath">datapath</link> * dp, struct nlattr * a)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>static int <link linkend="linux_2datapath_8c_1a8d012b2863686706ab9d1282a82d6625">ovs_dp_cmd_new</link> (
struct sk_buff * skb, struct genl_info * info)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>static void <link linkend="linux_2datapath_8c_1a6c66e1332f2a95e9510e37745d77bad1">__dp_destroy</link> (
struct <link linkend="structdatapath">datapath</link> * dp)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>static int <link linkend="linux_2datapath_8c_1a580bc462589253144c5027fa18fbfb17">ovs_dp_cmd_del</link> (
struct sk_buff * skb, struct genl_info * info)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>static int <link linkend="linux_2datapath_8c_1aa59555f8c6107137945c90e92fd42b4c">ovs_dp_cmd_set</link> (
struct sk_buff * skb, struct genl_info * info)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>static int <link linkend="linux_2datapath_8c_1ab253bc3f01b9d70955d3d3dcfc236b9f">ovs_dp_cmd_get</link> (
struct sk_buff * skb, struct genl_info * info)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>static int <link linkend="linux_2datapath_8c_1a64056132bb398b3e7c92291cc6905537">ovs_dp_cmd_dump</link> (
struct sk_buff * skb, struct netlink_callback * cb)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>static int <link linkend="linux_2datapath_8c_1a4272403de9a985cea17181e99b7a7edc">ovs_vport_cmd_fill_info</link> (
struct <link linkend="structvport">vport</link> * vport, struct sk_buff * skb, u32 portid, u32 seq, u32 flags, u8 cmd)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>static struct sk_buff * <link linkend="linux_2datapath_8c_1a45645849b972492fa9f01eeaf668bf78">ovs_vport_cmd_alloc_info</link> (
void )</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>struct sk_buff * <link linkend="linux_2datapath_8c_1adf50e47c9c548390402b1da1608235c9">ovs_vport_cmd_build_info</link> (
struct <link linkend="structvport">vport</link> * vport, u32 portid, u32 seq, u8 cmd)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>static struct <link linkend="structvport">vport</link> * <link linkend="linux_2datapath_8c_1a95b019fd3980803dcc1bb5aca920f58b">lookup_vport</link> (
struct net * net, const struct <link linkend="structovs__header">ovs_header</link> * ovs_header, struct nlattr * a)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>static int <link linkend="linux_2datapath_8c_1a0b878975d12b240c20c6b5389b5b12b6">ovs_vport_cmd_new</link> (
struct sk_buff * skb, struct genl_info * info)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>static int <link linkend="linux_2datapath_8c_1a89f1e2fa808021479860862b3e7556e5">ovs_vport_cmd_set</link> (
struct sk_buff * skb, struct genl_info * info)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>static int <link linkend="linux_2datapath_8c_1afc2316a8fe3074ed07e853d552fb4704">ovs_vport_cmd_del</link> (
struct sk_buff * skb, struct genl_info * info)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>static int <link linkend="linux_2datapath_8c_1ad818149bb2b46cab6eeb5b7ba6a14afe">ovs_vport_cmd_get</link> (
struct sk_buff * skb, struct genl_info * info)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>static int <link linkend="linux_2datapath_8c_1ac61e52592bc18541660c182e9aebbcaf">ovs_vport_cmd_dump</link> (
struct sk_buff * skb, struct netlink_callback * cb)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>static void <link linkend="linux_2datapath_8c_1a02412b752de54c0add0ca994b0e74079">dp_unregister_genl</link> (
int n_families)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>static int <link linkend="linux_2datapath_8c_1a8a589935468eb018de07b30900a56ddb">dp_register_genl</link> (
void )</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>static int __net_init <link linkend="linux_2datapath_8c_1af390458a6069bd6b50c9a0d46517159a">ovs_init_net</link> (
struct net * net)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>static void __net_exit <link linkend="linux_2datapath_8c_1a97bf5ddc3763f5f1b5691cc262bd206a">list_vports_from_net</link> (
struct net * net, struct net * dnet, struct list_head * head)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>static void __net_exit <link linkend="linux_2datapath_8c_1aead9307565d6ab903dd5db639c7299e4">ovs_exit_net</link> (
struct net * dnet)</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para> <link linkend="linux_2datapath_8c_1a537406a5b4c729d36ebe1d833ce74eda">DEFINE_COMPAT_PNET_REG_FUNC</link> (
device )</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>static int __init <link linkend="linux_2datapath_8c_1a85a2562435726aa1e9d254c86c6e597e">dp_init</link> (
void )</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para>static void <link linkend="linux_2datapath_8c_1a64b62ac82dbfc2107fa6b38a2c9e3612">dp_cleanup</link> (
void )</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para> <link linkend="linux_2datapath_8c_1a61981f8b771cdb3f88315f3da5f4fe18">module_init</link> (
<link linkend="linux_2datapath_8c_1a85a2562435726aa1e9d254c86c6e597e">dp_init</link> )</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para> <link linkend="linux_2datapath_8c_1afefe140861ac8adc338b486bf95f710f">module_exit</link> (
<link linkend="linux_2datapath_8c_1a64b62ac82dbfc2107fa6b38a2c9e3612">dp_cleanup</link> )</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para> <link linkend="linux_2datapath_8c_1a375185aea6f89fbd06af3e43f39d2975">MODULE_DESCRIPTION</link> (
&quot;Open vSwitch switching <link linkend="structdatapath">datapath</link>&quot; )</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para> <link linkend="linux_2datapath_8c_1ad94b36675e7eb067ea3ce6ff9e244a44">MODULE_LICENSE</link> (
&quot;GPL&quot; )</para>
                    </listitem>
                </itemizedlist>
            </para>
            <para>
                <itemizedlist>
                    <listitem>
                        <para> <link linkend="linux_2datapath_8c_1ada33d5db5abb99d420d4b6d82ea237c4">MODULE_VERSION</link> (
VERSION )</para>
                    </listitem>
                </itemizedlist>
            </para>
        </section>
    <simplesect>
        <title>Detailed Description</title>
    <para>Definition in file /home/vladn/git/ovs/datapath/linux/datapath.c</para>
    </simplesect>
</section>
